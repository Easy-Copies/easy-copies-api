generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  name           String     @db.VarChar(255)
  email          String     @unique @db.VarChar(255)
  isUserVerified Boolean    @default(false)
  password       String     @db.VarChar(255)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  tokens         Token[]
  roles          RoleUser[]

  @@map("users")
}

model Token {
  id        String    @id @default(uuid())
  token     String    @db.Text
  usedAt    DateTime?
  type      TokenType
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@map("tokens")
}

enum TokenType {
  Login
  RefreshToken
  ForgotPassword
  VerifyUser
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     RoleUser[]

  @@map("roles")
}

model RoleUser {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, roleId])
  @@map("role_users")
}
